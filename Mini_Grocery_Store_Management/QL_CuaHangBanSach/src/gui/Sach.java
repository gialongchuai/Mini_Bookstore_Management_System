/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.SQLServerProvider;
import static dao.SQLServerProvider.getConnection;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import dao.SachDAO;
import pojo.*;
import pojo.SachService;

/**
 *
 * @author MSII
 */
public class Sach extends javax.swing.JFrame {

    /**
     * Creates new form Sach
     */
    public Sach() {
        initComponents(); // Gọi phương thức khởi tạo giao diện
        this.setLocationRelativeTo(null);

        setButtonBackground(new java.awt.Color(190, 160, 190));
        getContentPane().setBackground(new Color(255, 229, 229)); // màu cho form

        // Thiết lập model cho bảng sách
        DefaultTableModel model = new Sach.NonEditableTableModel(new Object[][]{}, new String[]{
            "Mã sách", "Mô Tả Sách", "Tác Giả", "Giá", "Số Lượng", "Mã Danh Mục"
        });

        // Ngăn chặn chỉnh sửa các ô
        tblSach.setDefaultEditor(Object.class, null);

        // Ngăn chặn chọn ô và double click
        tblSach.setCellSelectionEnabled(false);
        tblSach.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() > 1) {
                    e.consume(); // Không thực hiện hành động nào khi double click
                }
            }
        });

        // Load dữ liệu từ cơ sở dữ liệu vào tblSach
        loadSachDataFromDatabase();
        hienThiTenDanhMuc();
    }

    private void setButtonBackground(Color color) {
        Component[] components = getContentPane().getComponents();
        for (Component component : components) {
            if (component instanceof JButton) {
                JButton button = (JButton) component;
                button.setBackground(color);
            }
        }
    }

    // Phương thức để hiển thị danh sách Tên Danh mục
    private void hienThiTenDanhMuc() {
        SachDAO danhMucSachDAO = new SachDAO();
        try {
            // Lấy danh sách Tên Danh mục từ DanhMucSachDAO
            List<String> danhSachTenDanhMuc = danhMucSachDAO.layDanhSachTenDanhMuc();

            // Xóa các mục cũ trong JComboBox
            cbxTenDanhMuc.removeAllItems();

            // Thêm các Tên Danh mục vào JComboBox
            for (String tenDanhMuc : danhSachTenDanhMuc) {
                cbxTenDanhMuc.addItem(tenDanhMuc);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tải danh sách Tên Danh mục.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Lớp con của DefaultTableModel để ngăn chặn việc chỉnh sửa nội dung
    private class NonEditableTableModel extends DefaultTableModel {

        public NonEditableTableModel(Object[][] data, String[] columns) {
            super(data, columns);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Không cho phép chỉnh sửa
        }
    }

    // Phương thức để load dữ liệu từ SQL Server vào JTable
    public void loadSachDataFromDatabase() {
        SachDAO sachDAO = new SachDAO();
        List<SachDB> sachList = sachDAO.getAllSach();
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Mã sách", "Tên sách", "Mô tả sách", "Tác giả", "Giá", "Số lượng", "Mã danh mục"}, 0);

        for (SachDB sach : sachList) {
            String giaFormatted = formatGia(sach.getGia());
            Object[] row = new Object[]{
                sach.getMaSach(),
                sach.getTenSach(),
                sach.getMoTaSach(),
                sach.getTacGia(),
                giaFormatted,
                sach.getSoLuong(),
                sach.getMaDanhMuc()
            };
            model.addRow(row);
        }

        tblSach.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnTuDong = new javax.swing.JButton();
        txtMaSach = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        txtMoTaSach = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnTimKiemSach = new javax.swing.JButton();
        btnLamMoiTblSach = new javax.swing.JButton();
        cbxTenDanhMuc = new javax.swing.JComboBox<>();
        txtTimKiemSach = new javax.swing.JTextField();
        btnDangXuat = new javax.swing.JButton();
        btnLamMoiTxt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnHoaDon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mã sách");

        jLabel2.setText("Tên sách");

        jLabel3.setText("Mô tả sách");

        jLabel4.setText("Giá");

        jLabel5.setText("Tác giả");

        jLabel6.setText("Số lượng");

        jLabel7.setText("Tên danh mục");

        btnTuDong.setText("Tự động");
        btnTuDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTuDongActionPerformed(evt);
            }
        });

        txtMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSachActionPerformed(evt);
            }
        });

        txtTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSachActionPerformed(evt);
            }
        });

        txtTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTacGiaActionPerformed(evt);
            }
        });

        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        txtMoTaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoTaSachActionPerformed(evt);
            }
        });

        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("SÁCH");

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSach);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnTimKiemSach.setText("Tìm kiếm");
        btnTimKiemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemSachActionPerformed(evt);
            }
        });

        btnLamMoiTblSach.setText("Làm mới");
        btnLamMoiTblSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiTblSachActionPerformed(evt);
            }
        });

        cbxTenDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTenDanhMucActionPerformed(evt);
            }
        });

        txtTimKiemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemSachActionPerformed(evt);
            }
        });

        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        btnLamMoiTxt.setText("Làm mới");
        btnLamMoiTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiTxtActionPerformed(evt);
            }
        });

        jButton1.setText("Tài khoản");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Danh mục sách");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnHoaDon.setText("Hóa đơn");
        btnHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(btnHoaDon))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTenSach)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbxTenDanhMuc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtMaSach, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtTacGia)
                                                .addComponent(txtMoTaSach)
                                                .addComponent(txtGia))))
                                    .addComponent(btnLamMoiTxt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTuDong))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDangXuat)
                            .addComponent(btnLuu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiemSach)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiemSach)
                        .addGap(173, 173, 173)
                        .addComponent(btnLamMoiTblSach))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(736, 736, 736)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDangXuat, btnLamMoiTblSach, btnLamMoiTxt, btnLuu, btnSua, btnThem, btnTimKiemSach, btnTuDong, btnXoa});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbxTenDanhMuc, txtGia, txtMaSach, txtMoTaSach, txtSoLuong, txtTacGia, txtTenSach});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHoaDon, jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimKiemSach, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLamMoiTblSach)
                            .addComponent(txtTimKiemSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLamMoiTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTuDong))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMoTaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(cbxTenDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnHoaDon)))
                        .addGap(77, 77, 77)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnLuu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDangXuat)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDangXuat, btnLamMoiTblSach, btnLamMoiTxt, btnLuu, btnSua, btnThem, btnTimKiemSach, btnTuDong, btnXoa});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbxTenDanhMuc, txtGia, txtMaSach, txtMoTaSach, txtSoLuong, txtTacGia, txtTenSach});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHoaDon, jButton1, jButton2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSachActionPerformed

    private void txtTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSachActionPerformed

    private void txtMoTaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoTaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoTaSachActionPerformed

    private void txtTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTacGiaActionPerformed

    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void cbxTenDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTenDanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTenDanhMucActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maSach = txtMaSach.getText();
        String tenSach = txtTenSach.getText();
        String moTaSach = txtMoTaSach.getText();
        String tacGia = txtTacGia.getText();
        String gia = txtGia.getText();
        String soLuong = txtSoLuong.getText();
        String tenDanhMuc = cbxTenDanhMuc.getSelectedItem().toString();

        SachDAO sachDAO = new SachDAO();
        boolean result = sachDAO.themSach(maSach, tenSach, moTaSach, tacGia, gia, soLuong, tenDanhMuc);
        if (result) {
            JOptionPane.showMessageDialog(null, "Thêm sách thành công");
            // Reset các trường nhập liệu sau khi thêm sách thành công
            loadSachDataFromDatabase();
            txtMaSach.setText("");
            txtTenSach.setText("");
            txtMoTaSach.setText("");
            txtTacGia.setText("");
            txtGia.setText("");
            txtSoLuong.setText("");
        }
    }//GEN-LAST:event_btnThemActionPerformed


    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (isFieldsEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng dữ liệu từ bảng để xóa!");
        } else {
            // Hỏi người dùng xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sách?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Lấy mã sách từ ô nhập liệu để xóa
                String maSach = txtMaSach.getText();
                deleteSachFromDatabase(maSach);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    // Hàm kiểm tra xem các ô nhập liệu có dữ liệu hay không
    private boolean isFieldsEmpty() {
        return txtMaSach.getText().isEmpty() || txtTenSach.getText().isEmpty() || txtMoTaSach.getText().isEmpty()
                || txtTacGia.getText().isEmpty() || txtGia.getText().isEmpty() || txtSoLuong.getText().isEmpty();
    }

    private SachService sachService = new SachService();

    // Hàm xóa sách từ cơ sở dữ liệu
    private void deleteSachFromDatabase(String maSach) {
        boolean isDeleted = sachService.deleteSach(maSach);
        if (isDeleted) {
            JOptionPane.showMessageDialog(this, "Xóa sách thành công!");
            // Load lại dữ liệu sách sau khi xóa thành công
            loadSachDataFromDatabase();
            // Đặt trống các ô nhập liệu
            txtMaSach.setText("");
            txtTenSach.setText("");
            txtMoTaSach.setText("");
            txtTacGia.setText("");
            txtGia.setText("");
            txtSoLuong.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Xóa sách không thành công do xung đột dữ liệu!");
        }
    }

    // Biến để lưu trữ giá trị ban đầu của txtMaSach
    private String originalMaSach;

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSach.getSelectedRow();

        if (selectedRow != -1) {
            try {
                String maSach = tblSach.getValueAt(selectedRow, 0).toString();
                originalMaSach = maSach;

                // Sử dụng lớp DAO để lấy tên danh mục
                SachDAO sachDAO = new SachDAO();
                String tenDanhMuc = sachDAO.layTenDanhMucTuMaSach(maSach);

                cbxTenDanhMuc.setSelectedItem(tenDanhMuc);

                txtMaSach.setText(tblSach.getValueAt(selectedRow, 0).toString());
                txtTenSach.setText(tblSach.getValueAt(selectedRow, 1).toString());
                txtMoTaSach.setText(tblSach.getValueAt(selectedRow, 2).toString());
                txtTacGia.setText(tblSach.getValueAt(selectedRow, 3).toString());

                String giaString = tblSach.getValueAt(selectedRow, 4).toString();
                double gia = Double.parseDouble(giaString);
                txtGia.setText(formatGia(gia));

                txtSoLuong.setText(tblSach.getValueAt(selectedRow, 5).toString());
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi truy vấn Tên danh mục từ cơ sở dữ liệu.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dữ liệu từ bảng để sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private String formatGia(double gia) {
        DecimalFormat decimalFormat = new DecimalFormat("####");
        return decimalFormat.format(gia);
    }

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        // Kiểm tra và cập nhật dữ liệu khi nút Lưu được nhấn
        updateBookData();
    }//GEN-LAST:event_btnLuuActionPerformed

    // Hàm kiểm tra xem tất cả các ô dữ liệu đã được điền đầy đủ hay chưa
    private boolean validateData() {
        if (txtMaSach.getText().isEmpty() || txtTenSach.getText().isEmpty() || txtMoTaSach.getText().isEmpty()
                || txtTacGia.getText().isEmpty() || txtGia.getText().isEmpty() || txtSoLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin sách.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (cbxTenDanhMuc.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tên danh mục.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // Kiểm tra xem txtMaSach có thay đổi không
        if (!txtMaSach.getText().equals(originalMaSach)) {
            JOptionPane.showMessageDialog(this, "Không được thay đổi mã sách.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Kiểm tra giá và số lượng có phải là số nguyên không
        try {
            // Kiểm tra giá
            double gia = Double.parseDouble(txtGia.getText());
            if (gia < 0) {
                JOptionPane.showMessageDialog(this, "Giá sách phải là số không âm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            }

            // Kiểm tra số lượng
            int soLuong = Integer.parseInt(txtSoLuong.getText());
            if (soLuong < 0) {
                JOptionPane.showMessageDialog(this, "Số lượng sách phải là số không âm.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá và số lượng sách phải là số nguyên.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    // Khai báo biến để lưu trữ dữ liệu MaDanhMuc tương ứng với TenDanhMuc
    private int selectedMaDanhMuc;

    // Hàm để cập nhật dữ liệu sách
    private void updateBookData() {
        if (!validateData()) {
            return;
        }

        try {
            // Kết nối đến cơ sở dữ liệu
            Connection connection = SQLServerProvider.getConnection();

            // Lấy MaDanhMuc tương ứng với TenDanhMuc được chọn
            String tenDanhMuc = cbxTenDanhMuc.getSelectedItem().toString();
            String query = "SELECT MaDanhMuc FROM DanhMucSach WHERE TenDanhMuc = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tenDanhMuc);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                selectedMaDanhMuc = rs.getInt("MaDanhMuc");
            }

            // Tạo đối tượng LaySach từ dữ liệu nhập vào
            LaySach laySach = new LaySach(
                    Integer.parseInt(txtMaSach.getText()),
                    txtTenSach.getText(),
                    txtMoTaSach.getText(),
                    txtTacGia.getText(),
                    Integer.parseInt(txtGia.getText()),
                    Integer.parseInt(txtSoLuong.getText()),
                    selectedMaDanhMuc
            );

            // Thực hiện cập nhật dữ liệu sách
            query = "UPDATE Sach SET TenSach = ?, MoTaSach = ?, TacGia = ?, Gia = ?, SoLuong = ?, MaDanhMuc = ? WHERE MaSach = ?";
            ps = connection.prepareStatement(query);
            ps.setString(1, laySach.getTenSach());
            ps.setString(2, laySach.getMoTaSach());
            ps.setString(3, laySach.getTacGia());
            ps.setInt(4, laySach.getGia());
            ps.setInt(5, laySach.getSoLuong());
            ps.setInt(6, laySach.getMaDanhMuc());
            ps.setInt(7, laySach.getMaSach());
            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thành công.", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                // Sau khi cập nhật thành công, load lại dữ liệu
                loadSachDataFromDatabase();
                // Xóa trống các ô dữ liệu đã sửa chữa
                txtMaSach.setText("");
                txtTenSach.setText("");
                txtMoTaSach.setText("");
                txtTacGia.setText("");
                txtGia.setText("");
                txtSoLuong.setText("");
                cbxTenDanhMuc.setSelectedIndex(-1); // Chọn lại index -1 để không có mục nào được chọn
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thất bại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

            // Đóng kết nối
            connection.close();
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnTimKiemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemSachActionPerformed
        // TODO add your handling code here:
        // Lấy chuỗi tìm kiếm từ JTextField
        String search = txtTimKiemSach.getText().trim();

        // Gọi phương thức loadSachDataFromDatabase với chuỗi tìm kiếm
        loadSachDataFromDatabase(search);
    }//GEN-LAST:event_btnTimKiemSachActionPerformed

    // Thêm biến thành viên để lưu trữ truy vấn tìm kiếm hiện tại
    private String searchQuery = "";

    // Phương thức để tải dữ liệu sách từ cơ sở dữ liệu dựa trên chuỗi tìm kiếm
    public void loadSachDataFromDatabase(String search) {
        String searchText = txtTimKiemSach.getText().trim();
        if (!searchText.isEmpty()) {
            try {
                // Kết nối đến cơ sở dữ liệu
                Connection conn = SQLServerProvider.getConnection();

                // Truy vấn để lấy dữ liệu từ bảng Sach với điều kiện tìm kiếm không phân biệt dấu
                String query = "SELECT * FROM Sach WHERE LOWER(REPLACE(TenSach, N' ', '')) LIKE LOWER(REPLACE(?, N' ', '')) OR LOWER(REPLACE(MoTaSach, N' ', '')) LIKE LOWER(REPLACE(?, N' ', '')) OR LOWER(REPLACE(TacGia, N' ', '')) LIKE LOWER(REPLACE(?, N' ', ''))";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setString(1, "%" + search + "%");
                pst.setString(2, "%" + search + "%");
                pst.setString(3, "%" + search + "%");
                ResultSet rs = pst.executeQuery();

                // Tạo một DefaultTableModel để lưu trữ dữ liệu
                DefaultTableModel model = new DefaultTableModel(new Object[]{"Mã sách", "Tên sách", "Mô tả sách", "Tác giả", "Giá", "Số lượng", "Mã danh mục"}, 0);

                // Đổ dữ liệu từ ResultSet vào DefaultTableModel
                while (rs.next()) {
                    Object[] row = new Object[]{
                        rs.getInt("MaSach"),
                        rs.getString("TenSach"),
                        rs.getString("MoTaSach"),
                        rs.getString("TacGia"),
                        rs.getDouble("Gia"),
                        rs.getInt("SoLuong"),
                        rs.getInt("MaDanhMuc")
                    };
                    model.addRow(row);
                }

                // Đặt DefaultTableModel làm mô hình cho JTable
                tblSach.setModel(model);

                // Đóng kết nối và tài nguyên
                rs.close();
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void txtTimKiemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemSachActionPerformed

    private void btnLamMoiTblSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiTblSachActionPerformed
        // TODO add your handling code here:
        loadSachDataFromDatabase();
        txtTimKiemSach.setText("");
    }//GEN-LAST:event_btnLamMoiTblSachActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        // TODO add your handling code here:
        // Hiển thị hộp thoại xác nhận
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn đăng xuất?", "Xác nhận đăng xuất", JOptionPane.YES_NO_OPTION);

        // Nếu người dùng chọn Yes
        if (choice == JOptionPane.YES_OPTION) {
            // Đóng form hiện tại
            this.dispose();

            // Mở form DangNhap
            DangNhap dangNhapForm = new DangNhap();
            dangNhapForm.setVisible(true);
        }
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void btnLamMoiTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiTxtActionPerformed
        // TODO add your handling code here:
        // Xóa dữ liệu trong các JTextField bằng cách đặt giá trị rỗng
        txtMaSach.setText("");
        txtTenSach.setText("");
        txtMoTaSach.setText("");
        txtTacGia.setText("");
        txtGia.setText("");
        txtSoLuong.setText("");
    }//GEN-LAST:event_btnLamMoiTxtActionPerformed

    private void btnTuDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTuDongActionPerformed
        // TODO add your handling code here:
        try {
            // Kết nối đến cơ sở dữ liệu bằng cách sử dụng lớp SQLServerProvider từ package dao
            Connection conn = SQLServerProvider.getConnection();

            // Truy vấn để lấy tất cả các số đã được sử dụng trong cột MaSach của bảng Sach
            String query = "SELECT MaSach FROM Sach";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();

            // Tạo một danh sách để lưu trữ các số đã được sử dụng
            List<Integer> usedNumbers = new ArrayList<>();
            while (rs.next()) {
                usedNumbers.add(rs.getInt("MaSach"));
            }

            // Kiểm tra từng số từ 1 đến vô cùng
            int newNumber = 1;
            while (true) {
                // Nếu số hiện tại chưa được sử dụng, gán vào txtMaSach và kết thúc quá trình
                if (!usedNumbers.contains(newNumber)) {
                    txtMaSach.setText(Integer.toString(newNumber));
                    break;
                }
                newNumber++;
            }

            // Đóng kết nối và tài nguyên
            rs.close();
            pst.close();
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tự động điền số vào txtMaSach.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTuDongActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Hiển thị hộp thoại xác nhận
        int choice = JOptionPane.showConfirmDialog(this, "Mở thông tin tài khoản?", "Xác nhận đăng xuất", JOptionPane.YES_NO_OPTION);

        // Nếu người dùng chọn Yes
        if (choice == JOptionPane.YES_OPTION) {
            // Đóng form hiện tại
            this.dispose();

            // Mở form DangNhap
            TaiKhoan dangNhapForm = new TaiKhoan();
            dangNhapForm.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // Hiển thị hộp thoại xác nhận
        int choice = JOptionPane.showConfirmDialog(this, "Mở danh mục sách?", "Xác nhận đăng xuất", JOptionPane.YES_NO_OPTION);

        // Nếu người dùng chọn Yes
        if (choice == JOptionPane.YES_OPTION) {
            // Đóng form hiện tại
            this.dispose();

            // Mở form DangNhap
            DanhMucSach dangNhapForm = new DanhMucSach();
            dangNhapForm.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoaDonActionPerformed
        // TODO add your handling code here:
        // Hiển thị hộp thoại xác nhận
        int choice = JOptionPane.showConfirmDialog(this, "Mở hóa đơn sách?", "Xác nhận đăng xuất", JOptionPane.YES_NO_OPTION);

        // Nếu người dùng chọn Yes
        if (choice == JOptionPane.YES_OPTION) {
            // Đóng form hiện tại
            this.dispose();

            // Mở form DangNhap
            HoaDon dangNhapForm = new HoaDon();
            dangNhapForm.setVisible(true);
        }
    }//GEN-LAST:event_btnHoaDonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnHoaDon;
    private javax.swing.JButton btnLamMoiTblSach;
    private javax.swing.JButton btnLamMoiTxt;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiemSach;
    private javax.swing.JButton btnTuDong;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxTenDanhMuc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtMoTaSach;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTimKiemSach;
    // End of variables declaration//GEN-END:variables
}
